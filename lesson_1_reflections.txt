How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	It narrowed down the possibilities to just the changes in the files,
	which made it easier to find the error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	You can see where you made mistakes or go back to a previous version
	of your code that may have worked better.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	The con would be you might forget to make the commit as you’re working.  The pro would be you can choose exactly when you want to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	Because sometimes you need to save all the files together as a collective
	project, rather than tracking each file separately.

How can you use the commands git log and git diff to view the history of files?

	You use git log to find all the commits that were made and you use git diff
	to compare to commits.

How might using version control make you more confident to make changes that
could break something?

	You can always go back and see exactly what you did that caused something
	to break.

Now that you have your workspace set up, what do you want to try using Git for?

	I’d like to try using git for a word document.
